#
# Copyright (C) 2025 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: cache-main

on:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  caching-pd:
    name: caching podman-desktop
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      # ==============================================
      # Installing Podman Desktop
      # ==============================================
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      # Install Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      # Install npm packages for quadlet extension
      - name: Execute pnpm in Podman Quadlet Extension
        run: pnpm install

      # Extract @podman-desktop/api version used (and store to $GITHUB_OUTPUT)
      - name: Extract @podman-desktop/api version
        id: pd-api-version
        shell: bash
        run: |
          # Using pnpm list to get the resolved version (E.g. getting 1.15.0 when ^1.15.0)
          export PD_VERSION=$(pnpm list -C packages/backend/ --json | jq -r '.[0].devDependencies."@podman-desktop/api".version')
          echo "PD_VERSION=$PD_VERSION" >> $GITHUB_OUTPUT
          echo "Using @podman-desktop/api $PD_VERSION"

      # Check cache for existing podman-desktop
      - name: Cache Podman Desktop
        id: cache-pd
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/podman-desktop
          key: pd-${{ steps.pd-api-version.outputs.PD_VERSION }}-${{ runner.os }}

      # Download Podman Desktop repository based on version defined in package.json
      - name: Download Podman Desktop
        if: steps.cache-pd.outputs.cache-hit != 'true'
        shell: bash
        env:
          PD_VERSION: ${{ steps.pd-api-version.outputs.PD_VERSION }}
        run: |
          echo "Downloading PD desktop to ${{ github.workspace }}/podman-desktop"
          # Stable release are available podman-desktop/podman-desktop
          # Prerelease are available under podman-desktop/prereleases
          if [[ "$PD_VERSION" =~ - ]]; then
            curl -sL "https://github.com/podman-desktop/prereleases/archive/refs/tags/v$PD_VERSION.tar.gz" | tar xvz
          else
            curl -sL "https://github.com/podman-desktop/podman-desktop/archive/refs/tags/v$PD_VERSION.tar.gz" | tar xvz
          fi
          # Move the extracted folder to the podman-desktop folder
          mv podman-desktop-$PD_VERSION/ podman-desktop/

      # Install and build podman-desktop
      - name: Install pnpm deps and build Podman Desktop
        if: steps.cache-pd.outputs.cache-hit != 'true'
        shell: bash
        working-directory: ${{ github.workspace }}/podman-desktop
        run: |
          pnpm install
          pnpm test:e2e:build
